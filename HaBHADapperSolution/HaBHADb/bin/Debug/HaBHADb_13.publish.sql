/*
Deployment script for MauiDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MauiDb"
:setvar DefaultFilePrefix "MauiDb"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS02\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS02\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[__EFMigrationsHistory]...';


GO
CREATE TABLE [dbo].[__EFMigrationsHistory] (
    [MigrationId]    NVARCHAR (150) NOT NULL,
    [ProductVersion] NVARCHAR (32)  NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY CLUSTERED ([MigrationId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Amenities]...';


GO
CREATE TABLE [dbo].[Amenities] (
    [AmenityId]       INT             IDENTITY (1, 1) NOT NULL,
    [BoardinghouseId] INT             NULL,
    [Name]            NVARCHAR (255)  NOT NULL,
    [Price]           DECIMAL (18, 2) NULL,
    CONSTRAINT [PK_Amenities] PRIMARY KEY CLUSTERED ([AmenityId] ASC)
);


GO
PRINT N'Creating Index [dbo].[Amenities].[IX_Amenities_BoardinghouseId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Amenities_BoardinghouseId]
    ON [dbo].[Amenities]([BoardinghouseId] ASC);


GO
PRINT N'Creating Table [dbo].[AspNetRoleClaims]...';


GO
CREATE TABLE [dbo].[AspNetRoleClaims] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [RoleId]     NVARCHAR (450) NOT NULL,
    [ClaimType]  NVARCHAR (MAX) NULL,
    [ClaimValue] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[AspNetRoleClaims].[IX_AspNetRoleClaims_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetRoleClaims_RoleId]
    ON [dbo].[AspNetRoleClaims]([RoleId] ASC);


GO
PRINT N'Creating Table [dbo].[AspNetRoles]...';


GO
CREATE TABLE [dbo].[AspNetRoles] (
    [Id]               NVARCHAR (450) NOT NULL,
    [Name]             NVARCHAR (256) NULL,
    [NormalizedName]   NVARCHAR (256) NULL,
    [ConcurrencyStamp] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[AspNetRoles].[RoleNameIndex]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [RoleNameIndex]
    ON [dbo].[AspNetRoles]([NormalizedName] ASC) WHERE ([NormalizedName] IS NOT NULL);


GO
PRINT N'Creating Table [dbo].[AspNetUserClaims]...';


GO
CREATE TABLE [dbo].[AspNetUserClaims] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [UserId]     NVARCHAR (450) NOT NULL,
    [ClaimType]  NVARCHAR (MAX) NULL,
    [ClaimValue] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[AspNetUserClaims].[IX_AspNetUserClaims_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetUserClaims_UserId]
    ON [dbo].[AspNetUserClaims]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[AspNetUserLogins]...';


GO
CREATE TABLE [dbo].[AspNetUserLogins] (
    [LoginProvider]       NVARCHAR (450) NOT NULL,
    [ProviderKey]         NVARCHAR (450) NOT NULL,
    [ProviderDisplayName] NVARCHAR (MAX) NULL,
    [UserId]              NVARCHAR (450) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY CLUSTERED ([LoginProvider] ASC, [ProviderKey] ASC)
);


GO
PRINT N'Creating Index [dbo].[AspNetUserLogins].[IX_AspNetUserLogins_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetUserLogins_UserId]
    ON [dbo].[AspNetUserLogins]([UserId] ASC);


GO
PRINT N'Creating Table [dbo].[AspNetUserRoles]...';


GO
CREATE TABLE [dbo].[AspNetUserRoles] (
    [UserId] NVARCHAR (450) NOT NULL,
    [RoleId] NVARCHAR (450) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY CLUSTERED ([UserId] ASC, [RoleId] ASC)
);


GO
PRINT N'Creating Index [dbo].[AspNetUserRoles].[IX_AspNetUserRoles_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetUserRoles_RoleId]
    ON [dbo].[AspNetUserRoles]([RoleId] ASC);


GO
PRINT N'Creating Table [dbo].[AspNetUsers]...';


GO
CREATE TABLE [dbo].[AspNetUsers] (
    [Id]                   NVARCHAR (450)     NOT NULL,
    [UserName]             NVARCHAR (256)     NULL,
    [NormalizedUserName]   NVARCHAR (256)     NULL,
    [Email]                NVARCHAR (256)     NULL,
    [NormalizedEmail]      NVARCHAR (256)     NULL,
    [EmailConfirmed]       BIT                NOT NULL,
    [PasswordHash]         NVARCHAR (MAX)     NULL,
    [SecurityStamp]        NVARCHAR (MAX)     NULL,
    [ConcurrencyStamp]     NVARCHAR (MAX)     NULL,
    [PhoneNumber]          NVARCHAR (MAX)     NULL,
    [PhoneNumberConfirmed] BIT                NOT NULL,
    [TwoFactorEnabled]     BIT                NOT NULL,
    [LockoutEnd]           DATETIMEOFFSET (7) NULL,
    [LockoutEnabled]       BIT                NOT NULL,
    [AccessFailedCount]    INT                NOT NULL,
    [FirstName]            NVARCHAR (100)     NULL,
    [LastName]             NVARCHAR (100)     NULL,
    [MiddleInitial]        NVARCHAR (1)       NULL,
    [ContactNumber]        NVARCHAR (15)      NULL,
    [Location]             NVARCHAR (200)     NULL,
    [IsApproved]           BIT                NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Index [dbo].[AspNetUsers].[EmailIndex]...';


GO
CREATE NONCLUSTERED INDEX [EmailIndex]
    ON [dbo].[AspNetUsers]([NormalizedEmail] ASC);


GO
PRINT N'Creating Index [dbo].[AspNetUsers].[UserNameIndex]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [UserNameIndex]
    ON [dbo].[AspNetUsers]([NormalizedUserName] ASC) WHERE ([NormalizedUserName] IS NOT NULL);


GO
PRINT N'Creating Table [dbo].[AspNetUserTokens]...';


GO
CREATE TABLE [dbo].[AspNetUserTokens] (
    [UserId]        NVARCHAR (450) NOT NULL,
    [LoginProvider] NVARCHAR (450) NOT NULL,
    [Name]          NVARCHAR (450) NOT NULL,
    [Value]         NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY CLUSTERED ([UserId] ASC, [LoginProvider] ASC, [Name] ASC)
);


GO
PRINT N'Creating Table [dbo].[BoardingHouseImages]...';


GO
CREATE TABLE [dbo].[BoardingHouseImages] (
    [ImageId]         INT            IDENTITY (1, 1) NOT NULL,
    [BoardinghouseId] INT            NOT NULL,
    [ImageBase64]     NVARCHAR (MAX) NULL,
    [Description]     NVARCHAR (255) NULL,
    CONSTRAINT [PK_BoardingHouseImages] PRIMARY KEY CLUSTERED ([ImageId] ASC)
);


GO
PRINT N'Creating Index [dbo].[BoardingHouseImages].[IX_BoardingHouseImages_BoardinghouseId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BoardingHouseImages_BoardinghouseId]
    ON [dbo].[BoardingHouseImages]([BoardinghouseId] ASC);


GO
PRINT N'Creating Table [dbo].[BoardingHouses]...';


GO
CREATE TABLE [dbo].[BoardingHouses] (
    [BoardinghouseId] INT             IDENTITY (1, 1) NOT NULL,
    [RoomNumber]      INT             NULL,
    [RoomSize]        INT             NULL,
    [PricePerMonth]   DECIMAL (18, 2) NULL,
    [IsAvailble]      BIT             NOT NULL,
    [Descriptions]    NVARCHAR (MAX)  NULL,
    [TenantId]        NVARCHAR (450)  NULL,
    [ClientId]        NVARCHAR (450)  NULL,
    CONSTRAINT [PK_BoardingHouses] PRIMARY KEY CLUSTERED ([BoardinghouseId] ASC)
);


GO
PRINT N'Creating Index [dbo].[BoardingHouses].[IX_BoardingHouses_TenantId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BoardingHouses_TenantId]
    ON [dbo].[BoardingHouses]([TenantId] ASC);


GO
PRINT N'Creating Table [dbo].[BookingAmenities]...';


GO
CREATE TABLE [dbo].[BookingAmenities] (
    [BookingAmenityId] INT IDENTITY (1, 1) NOT NULL,
    [BookingId]        INT NOT NULL,
    [AmenityId]        INT NOT NULL,
    CONSTRAINT [PK_BookingAmenities] PRIMARY KEY CLUSTERED ([BookingAmenityId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Bookings]...';


GO
CREATE TABLE [dbo].[Bookings] (
    [BookingId]       INT             IDENTITY (1, 1) NOT NULL,
    [BoardinghouseId] INT             NOT NULL,
    [ClientId]        NVARCHAR (450)  NOT NULL,
    [BookingDate]     DATETIME        NOT NULL,
    [CheckInDate]     DATETIME        NULL,
    [CheckOutDate]    DATETIME        NULL,
    [TotalAmount]     DECIMAL (18, 2) NULL,
    [ApprovalStatus]  NVARCHAR (50)   NOT NULL,
    CONSTRAINT [PK_Bookings] PRIMARY KEY CLUSTERED ([BookingId] ASC)
);


GO
PRINT N'Creating Index [dbo].[Bookings].[IX_Bookings_BoardinghouseId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Bookings_BoardinghouseId]
    ON [dbo].[Bookings]([BoardinghouseId] ASC);


GO
PRINT N'Creating Index [dbo].[Bookings].[IX_Bookings_ClientId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Bookings_ClientId]
    ON [dbo].[Bookings]([ClientId] ASC);


GO
PRINT N'Creating Table [dbo].[BookingTransactions]...';


GO
CREATE TABLE [dbo].[BookingTransactions] (
    [BookingTransactionId] INT             IDENTITY (1, 1) NOT NULL,
    [BoardingHouseId]      INT             NULL,
    [ClientId]             NVARCHAR (450)  NOT NULL,
    [BookingDate]          DATETIME        NOT NULL,
    [CheckInDate]          DATETIME        NULL,
    [CheckOutDate]         DATETIME        NULL,
    [Status]               NVARCHAR (50)   NOT NULL,
    [AmountPaid]           DECIMAL (18, 2) NULL,
    CONSTRAINT [PK_BookingTransactions] PRIMARY KEY CLUSTERED ([BookingTransactionId] ASC)
);


GO
PRINT N'Creating Index [dbo].[BookingTransactions].[IX_BookingTransactions_BoardingHouseId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BookingTransactions_BoardingHouseId]
    ON [dbo].[BookingTransactions]([BoardingHouseId] ASC);


GO
PRINT N'Creating Index [dbo].[BookingTransactions].[IX_BookingTransactions_ClientId]...';


GO
CREATE NONCLUSTERED INDEX [IX_BookingTransactions_ClientId]
    ON [dbo].[BookingTransactions]([ClientId] ASC);


GO
PRINT N'Creating Table [dbo].[ClientRequests]...';


GO
CREATE TABLE [dbo].[ClientRequests] (
    [ClientRequestId] INT            IDENTITY (1, 1) NOT NULL,
    [BoardinghouseId] INT            NULL,
    [ClientId]        NVARCHAR (450) NOT NULL,
    [RequestDate]     DATETIME       NOT NULL,
    [InputDate]       DATETIME       NULL,
    [Status]          NVARCHAR (50)  NOT NULL,
    [Message]         NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([ClientRequestId] ASC)
);


GO
PRINT N'Creating Index [dbo].[ClientRequests].[IX_ClientRequests_BoardinghouseId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ClientRequests_BoardinghouseId]
    ON [dbo].[ClientRequests]([BoardinghouseId] ASC);


GO
PRINT N'Creating Index [dbo].[ClientRequests].[IX_ClientRequests_ClientId]...';


GO
CREATE NONCLUSTERED INDEX [IX_ClientRequests_ClientId]
    ON [dbo].[ClientRequests]([ClientId] ASC);


GO
PRINT N'Creating Table [dbo].[ImageFiles]...';


GO
CREATE TABLE [dbo].[ImageFiles] (
    [ImageId]         INT             IDENTITY (1, 1) NOT NULL,
    [FileName]        NVARCHAR (255)  NULL,
    [ContentType]     NVARCHAR (100)  NULL,
    [ImageData]       VARBINARY (MAX) NULL,
    [BoardinghouseId] INT             NULL,
    PRIMARY KEY CLUSTERED ([ImageId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Locations]...';


GO
CREATE TABLE [dbo].[Locations] (
    [Id]              INT        IDENTITY (1, 1) NOT NULL,
    [Latitude]        FLOAT (53) NULL,
    [Longitude]       FLOAT (53) NULL,
    [BoardinghouseId] INT        NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[AspNetUsers]...';


GO
ALTER TABLE [dbo].[AspNetUsers]
    ADD DEFAULT ((0)) FOR [IsApproved];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Bookings]...';


GO
ALTER TABLE [dbo].[Bookings]
    ADD DEFAULT GETDATE() FOR [BookingDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Bookings]...';


GO
ALTER TABLE [dbo].[Bookings]
    ADD DEFAULT 'Pending' FOR [ApprovalStatus];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[BookingTransactions]...';


GO
ALTER TABLE [dbo].[BookingTransactions]
    ADD DEFAULT ('Pending') FOR [Status];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ClientRequests]...';


GO
ALTER TABLE [dbo].[ClientRequests]
    ADD DEFAULT (getdate()) FOR [RequestDate];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[ClientRequests]...';


GO
ALTER TABLE [dbo].[ClientRequests]
    ADD DEFAULT ('Pending') FOR [Status];


GO
PRINT N'Creating Foreign Key [dbo].[FK_Amenities_BoardingHouses_BoardinghouseId]...';


GO
ALTER TABLE [dbo].[Amenities] WITH NOCHECK
    ADD CONSTRAINT [FK_Amenities_BoardingHouses_BoardinghouseId] FOREIGN KEY ([BoardinghouseId]) REFERENCES [dbo].[BoardingHouses] ([BoardinghouseId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_AspNetRoleClaims_AspNetRoles_RoleId]...';


GO
ALTER TABLE [dbo].[AspNetRoleClaims] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_AspNetUserClaims_AspNetUsers_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserClaims] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_AspNetUserLogins_AspNetUsers_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserLogins] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_AspNetUserRoles_AspNetRoles_RoleId]...';


GO
ALTER TABLE [dbo].[AspNetUserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_AspNetUserRoles_AspNetUsers_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_AspNetUserTokens_AspNetUsers_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserTokens] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_BoardingHouseImages_BoardingHouses]...';


GO
ALTER TABLE [dbo].[BoardingHouseImages] WITH NOCHECK
    ADD CONSTRAINT [FK_BoardingHouseImages_BoardingHouses] FOREIGN KEY ([BoardinghouseId]) REFERENCES [dbo].[BoardingHouses] ([BoardinghouseId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_BoardingHouses_AspNetUsers_TenantId]...';


GO
ALTER TABLE [dbo].[BoardingHouses] WITH NOCHECK
    ADD CONSTRAINT [FK_BoardingHouses_AspNetUsers_TenantId] FOREIGN KEY ([TenantId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_BookingAmenities_Bookings]...';


GO
ALTER TABLE [dbo].[BookingAmenities] WITH NOCHECK
    ADD CONSTRAINT [FK_BookingAmenities_Bookings] FOREIGN KEY ([BookingId]) REFERENCES [dbo].[Bookings] ([BookingId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_BookingAmenities_Amenities]...';


GO
ALTER TABLE [dbo].[BookingAmenities] WITH NOCHECK
    ADD CONSTRAINT [FK_BookingAmenities_Amenities] FOREIGN KEY ([AmenityId]) REFERENCES [dbo].[Amenities] ([AmenityId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Bookings_BoardingHouses]...';


GO
ALTER TABLE [dbo].[Bookings] WITH NOCHECK
    ADD CONSTRAINT [FK_Bookings_BoardingHouses] FOREIGN KEY ([BoardinghouseId]) REFERENCES [dbo].[BoardingHouses] ([BoardinghouseId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Bookings_AspNetUsers]...';


GO
ALTER TABLE [dbo].[Bookings] WITH NOCHECK
    ADD CONSTRAINT [FK_Bookings_AspNetUsers] FOREIGN KEY ([ClientId]) REFERENCES [dbo].[AspNetUsers] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_BookingTransactions_AspNetUsers_ClientId]...';


GO
ALTER TABLE [dbo].[BookingTransactions] WITH NOCHECK
    ADD CONSTRAINT [FK_BookingTransactions_AspNetUsers_ClientId] FOREIGN KEY ([ClientId]) REFERENCES [dbo].[AspNetUsers] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_BookingTransactions_BoardingHouses_BoardingHouseId]...';


GO
ALTER TABLE [dbo].[BookingTransactions] WITH NOCHECK
    ADD CONSTRAINT [FK_BookingTransactions_BoardingHouses_BoardingHouseId] FOREIGN KEY ([BoardingHouseId]) REFERENCES [dbo].[BoardingHouses] ([BoardinghouseId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ClientRequests_AspNetUsers_ClientId]...';


GO
ALTER TABLE [dbo].[ClientRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_ClientRequests_AspNetUsers_ClientId] FOREIGN KEY ([ClientId]) REFERENCES [dbo].[AspNetUsers] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ClientRequests_BoardingHouses]...';


GO
ALTER TABLE [dbo].[ClientRequests] WITH NOCHECK
    ADD CONSTRAINT [FK_ClientRequests_BoardingHouses] FOREIGN KEY ([BoardinghouseId]) REFERENCES [dbo].[BoardingHouses] ([BoardinghouseId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Locations_ToTable]...';


GO
ALTER TABLE [dbo].[Locations] WITH NOCHECK
    ADD CONSTRAINT [FK_Locations_ToTable] FOREIGN KEY ([BoardinghouseId]) REFERENCES [dbo].[BoardingHouses] ([BoardinghouseId]);


GO
PRINT N'Creating Procedure [dbo].[AddAmenitiesToBooking]...';


GO
CREATE PROCEDURE AddAmenitiesToBooking
    @BookingId INT,
    @AmenityIds NVARCHAR(MAX) 
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @AmenityId INT;
    DECLARE @Pos INT = 0;
    DECLARE @Delimiter CHAR(1) = ',';

    WHILE CHARINDEX(@Delimiter, @AmenityIds) > 0
    BEGIN
        SET @Pos = CHARINDEX(@Delimiter, @AmenityIds);
        SET @AmenityId = CAST(SUBSTRING(@AmenityIds, 1, @Pos - 1) AS INT);
        SET @AmenityIds = SUBSTRING(@AmenityIds, @Pos + 1, LEN(@AmenityIds));

        INSERT INTO BookingAmenities (BookingId, AmenityId)
        VALUES (@BookingId, @AmenityId);
    END

    SET @AmenityId = CAST(@AmenityIds AS INT);
    INSERT INTO BookingAmenities (BookingId, AmenityId)
    VALUES (@BookingId, @AmenityId);
END;
GO
PRINT N'Creating Procedure [dbo].[AddAmenity]...';


GO
CREATE PROCEDURE AddAmenity
    @BoardinghouseId INT,
    @Name NVARCHAR(255),
    @Price DECIMAL(18, 2) = NULL
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO Amenities (BoardinghouseId, Name, Price)
    VALUES (@BoardinghouseId, @Name, @Price);

    SELECT SCOPE_IDENTITY() AS AmenityId;
END;
GO
PRINT N'Creating Procedure [dbo].[AddBoardingHouse]...';


GO
CREATE PROCEDURE AddBoardingHouse
    @RoomNumber INT = NULL,
    @RoomSize INT = NULL,
    @PricePerMonth DECIMAL(18, 2) = NULL,
    @IsAvailable BIT,
    @Descriptions NVARCHAR(MAX) = NULL,
    @TenantId NVARCHAR(450) = NULL,
    @ClientId NVARCHAR(450) = NULL
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO BoardingHouses (RoomNumber, RoomSize, PricePerMonth, IsAvailble, Descriptions, TenantId, ClientId)
    VALUES (@RoomNumber, @RoomSize, @PricePerMonth, @IsAvailable, @Descriptions, @TenantId, @ClientId);

    SELECT SCOPE_IDENTITY() AS BoardinghouseId;
END;
GO
PRINT N'Creating Procedure [dbo].[AddBoardingHouseImage]...';


GO
CREATE PROCEDURE AddBoardingHouseImage
    @BoardinghouseId INT,
    @ImageBase64 NVARCHAR(MAX), 
    @Description NVARCHAR(255) = NULL 
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO BoardingHouseImages (BoardinghouseId, ImageBase64, Description)
    VALUES (@BoardinghouseId, @ImageBase64, @Description);
END;
GO
PRINT N'Creating Procedure [dbo].[AddBooking]...';


GO
CREATE PROCEDURE AddBooking
    @BoardinghouseId INT,
    @ClientId NVARCHAR(450),
    @CheckInDate DATETIME,
    @CheckOutDate DATETIME,
    @TotalAmount DECIMAL(18, 2),
    @Status NVARCHAR(50) = 'Pending'
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO Bookings (BoardinghouseId, ClientId, CheckInDate, CheckOutDate, TotalAmount, ApprovalStatus)
    VALUES (@BoardinghouseId, @ClientId, @CheckInDate, @CheckOutDate, @TotalAmount, @Status);

    SELECT SCOPE_IDENTITY() AS BookingId;
END;
GO
PRINT N'Creating Procedure [dbo].[ApproveOrRejectBooking]...';


GO
CREATE PROCEDURE ApproveOrRejectBooking
    @BookingId INT,
    @ApprovalStatus NVARCHAR(50), 
    @BoardinghouseId INT
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE Bookings
    SET ApprovalStatus = @ApprovalStatus
    WHERE BookingId = @BookingId;

    IF @ApprovalStatus = 'Approved'
    BEGIN
        UPDATE BoardingHouses
        SET IsAvailble = 0  
        WHERE BoardinghouseId = @BoardinghouseId;
    END

    IF @ApprovalStatus = 'Rejected'
    BEGIN
        DELETE FROM Bookings
        WHERE BookingId = @BookingId;
    END
END;
GO
PRINT N'Creating Procedure [dbo].[DeleteAllBoardingHouseImages]...';


GO
CREATE PROCEDURE DeleteAllBoardingHouseImages
    @BoardinghouseId INT
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM BoardingHouseImages
    WHERE BoardinghouseId = @BoardinghouseId;
END;
GO
PRINT N'Creating Procedure [dbo].[DeleteAmenity]...';


GO
CREATE PROCEDURE DeleteAmenity
    @AmenityId INT
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM Amenities
    WHERE AmenityId = @AmenityId;
END;
GO
PRINT N'Creating Procedure [dbo].[DeleteBoardingHouse]...';


GO
CREATE PROCEDURE DeleteBoardingHouse
    @BoardinghouseId INT
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM BoardingHouses
    WHERE BoardinghouseId = @BoardinghouseId;
END;
GO
PRINT N'Creating Procedure [dbo].[DeleteBoardingHouseImage]...';


GO
CREATE PROCEDURE DeleteBoardingHouseImage
    @ImageId INT
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM BoardingHouseImages
    WHERE ImageId = @ImageId;
END;
GO
PRINT N'Creating Procedure [dbo].[GetAllBoardingHouses]...';


GO
CREATE PROCEDURE GetAllBoardingHouses
AS
BEGIN
    SET NOCOUNT ON;

    SELECT * 
    FROM BoardingHouses;
END;
GO
PRINT N'Creating Procedure [dbo].[GetAmenitiesByBoardinghouseId]...';


GO
CREATE PROCEDURE GetAmenitiesByBoardinghouseId
    @BoardinghouseId INT
AS
BEGIN
    SET NOCOUNT ON;
    
    SELECT * 
    FROM Amenities
    WHERE BoardinghouseId = @BoardinghouseId;
END;
GO
PRINT N'Creating Procedure [dbo].[GetBoardingHouseImages]...';


GO
CREATE PROCEDURE GetBoardingHouseImages
    @BoardinghouseId INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT ImageId, ImageBase64, Description
    FROM BoardingHouseImages
    WHERE BoardinghouseId = @BoardinghouseId;
END;
GO
PRINT N'Creating Procedure [dbo].[GetBoardingHousesByTenantId]...';


GO
CREATE PROCEDURE GetBoardingHousesByTenantId
    @TenantId NVARCHAR(450)
AS
BEGIN
    SET NOCOUNT ON;

    SELECT * 
    FROM BoardingHouses
    WHERE TenantId = @TenantId;
END;
GO
PRINT N'Creating Procedure [dbo].[GetBookingWithAmenities]...';


GO
CREATE PROCEDURE GetBookingWithAmenities
    @BookingId INT
AS
BEGIN
    SET NOCOUNT ON;
        
    SELECT 
        b.BoardinghouseId,
        b.ClientId,
        b.BookingDate,
        b.CheckInDate,
        b.CheckOutDate,
        b.TotalAmount,
        b.ApprovalStatus,
        a.Name AS AmenityName,
        a.Price AS AmenityPrice
    FROM Bookings b
    LEFT JOIN BookingAmenities ba ON ba.BookingId = b.BookingId
    LEFT JOIN Amenities a ON a.AmenityId = ba.AmenityId
    WHERE b.BookingId = @BookingId;
END;
GO
PRINT N'Creating Procedure [dbo].[GetPendingBookings]...';


GO
CREATE PROCEDURE GetPendingBookings
AS
BEGIN
    SET NOCOUNT ON;

    SELECT * 
    FROM Bookings
    WHERE ApprovalStatus = 'Pending';
END;
GO
PRINT N'Creating Procedure [dbo].[UpdateAmenity]...';


GO
CREATE PROCEDURE UpdateAmenity
    @AmenityId INT,
    @Name NVARCHAR(255),
    @Price DECIMAL(18, 2) = NULL
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE Amenities
    SET 
        Name = @Name,
        Price = @Price
    WHERE AmenityId = @AmenityId;
END;
GO
PRINT N'Creating Procedure [dbo].[UpdateBoardingHouse]...';


GO
CREATE PROCEDURE UpdateBoardingHouse
    @BoardinghouseId INT,
    @RoomNumber INT = NULL,
    @RoomSize INT = NULL,
    @PricePerMonth DECIMAL(18, 2) = NULL,
    @IsAvailable BIT,
    @Descriptions NVARCHAR(MAX) = NULL,
    @TenantId NVARCHAR(450) = NULL,
    @ClientId NVARCHAR(450) = NULL
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE BoardingHouses
    SET 
        RoomNumber = @RoomNumber,
        RoomSize = @RoomSize,
        PricePerMonth = @PricePerMonth,
        IsAvailble = @IsAvailable,
        Descriptions = @Descriptions,
        TenantId = @TenantId,
        ClientId = @ClientId
    WHERE BoardinghouseId = @BoardinghouseId;
END;
GO
PRINT N'Creating Procedure [dbo].[UpdateBoardingHouseImage]...';


GO
CREATE PROCEDURE UpdateBoardingHouseImage
    @ImageId INT,               
    @BoardinghouseId INT,      
    @ImageBase64 NVARCHAR(MAX) = NULL,  
    @Description NVARCHAR(255) = NULL   
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE BoardingHouseImages
    SET 
        ImageBase64 = @ImageBase64, 
        Description = @Description
    WHERE ImageId = @ImageId AND BoardinghouseId = @BoardinghouseId;
END;
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Amenities] WITH CHECK CHECK CONSTRAINT [FK_Amenities_BoardingHouses_BoardinghouseId];

ALTER TABLE [dbo].[AspNetRoleClaims] WITH CHECK CHECK CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId];

ALTER TABLE [dbo].[AspNetUserClaims] WITH CHECK CHECK CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId];

ALTER TABLE [dbo].[AspNetUserLogins] WITH CHECK CHECK CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId];

ALTER TABLE [dbo].[AspNetUserRoles] WITH CHECK CHECK CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId];

ALTER TABLE [dbo].[AspNetUserRoles] WITH CHECK CHECK CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId];

ALTER TABLE [dbo].[AspNetUserTokens] WITH CHECK CHECK CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId];

ALTER TABLE [dbo].[BoardingHouseImages] WITH CHECK CHECK CONSTRAINT [FK_BoardingHouseImages_BoardingHouses];

ALTER TABLE [dbo].[BoardingHouses] WITH CHECK CHECK CONSTRAINT [FK_BoardingHouses_AspNetUsers_TenantId];

ALTER TABLE [dbo].[BookingAmenities] WITH CHECK CHECK CONSTRAINT [FK_BookingAmenities_Bookings];

ALTER TABLE [dbo].[BookingAmenities] WITH CHECK CHECK CONSTRAINT [FK_BookingAmenities_Amenities];

ALTER TABLE [dbo].[Bookings] WITH CHECK CHECK CONSTRAINT [FK_Bookings_BoardingHouses];

ALTER TABLE [dbo].[Bookings] WITH CHECK CHECK CONSTRAINT [FK_Bookings_AspNetUsers];

ALTER TABLE [dbo].[BookingTransactions] WITH CHECK CHECK CONSTRAINT [FK_BookingTransactions_AspNetUsers_ClientId];

ALTER TABLE [dbo].[BookingTransactions] WITH CHECK CHECK CONSTRAINT [FK_BookingTransactions_BoardingHouses_BoardingHouseId];

ALTER TABLE [dbo].[ClientRequests] WITH CHECK CHECK CONSTRAINT [FK_ClientRequests_AspNetUsers_ClientId];

ALTER TABLE [dbo].[ClientRequests] WITH CHECK CHECK CONSTRAINT [FK_ClientRequests_BoardingHouses];

ALTER TABLE [dbo].[Locations] WITH CHECK CHECK CONSTRAINT [FK_Locations_ToTable];


GO
PRINT N'Update complete.';


GO
